Object:
	name: "Undefined"
	fullname: "Undefined"
	parentObject: NULL
	type: CodeBlock
	returnType: "Integer"
	paramTypes: NULL
	definedSymbols:
		... (RSL stuff.	BaseType, print, echo, Integer, Float, etc)
		Object:	name: "Rectangle"
			fullname: BaseType_Rectangle
			parentScope: BaseType
			type: Type
			returnType: NULL
			paramTypes: NULL
			definedSymbols:
				Object: name: "w"
					fullName: "w"
					parentScope: NULL
					type: Variable
					returnType: "Integer"
					paramTypes: NULL
					definedSymbols: NULL
					code: NULL
				Object: name: "h"
					fullName: "h"
					parentScope: NULL
					type: Variable
					returnType: "Integer"
					paramTypes: NULL
					definedSymbols: NULL
					code: NULL
				Object: name: "Rectangle"
					fullName: "Rectangle_Rectangle_Rectangle_Integer_Integer"
					parentScope: NULL	//because it's a constructor
					type: Constructor
					returnType: "Rectangle"
					paramTypes: [Integer, Integer]
					definedSymbols: (shorthand: Integer width, Integer height, Rectangle* self)
					code:
						"Rectangle * Rectangle_Rectangle_Rectangle_Integer_Integer(Integer width, Integer height) {"
						"	Rectangle * self = (Rectangle*)malloc(sizeof(Rectangle));"
						"	self->w = width;"
						"	self->h = height;"
						"	return self;"
						"}"
				Object: name: "Area"
					fullName: "Integer_Rectangle_Area"
					parentScope: "Rectangle"
					type: Function
					returnType: "Integer"
					paramTypes: NULL
					definedSymbols: (shorthand: Rectangle* self)
					code:
						"Integer Integer_Rectangle_Area(Rectangle* self) {"
						"	return self->width * self->height;"
						"}"
			code: 
				"typedef struct {"
				"	BaseType parent;"
				"	int w;"
				"	int h;"
				"} Rectangle;"
		Object:	name: "Square"
			fullname: Rectangle_Square
			parentScope: Rectangle
			type: Type
			returnType: NULL
			paramTypes: NULL
			definedSymbols:
				Object: name: "Square"
					fullName: "Square_Square_Square_Integer"
					parentScope: NULL	//because it's a constructor
					type: Constructor
					returnType: "Square"
					paramTypes: [Integer, Integer]
					definedSymbols: (shorthand: Integer size, Square* self)
					code:
						"Square * Square_Square_Square_Integer(Integer size) {"
						"	Square * self = (Square*)malloc(sizeof(Square));"
						"	self->parent.w = size;"
						"	self->parent.h = size;"
						"	return self;"
						"}"
			code:
				"typedef struct {"
				"	Rectangle parent;"
				"} Square;"
		Object: name: "calcTotalArea"
			fullname: "Integer_calcTotalArea_Rectangle_Rectangle"
			parentScope: NULL
			type: Function
			returnType "Integer"
			paramTypes: ["Rectangle", "Rectangle"]
			definedSymbols: (shorthand. Rectangle r1, Rectangle r2, Integer a1, Integer a2)
			code:
				"Integer Integer_calcTotalArea_Rectangle_Rectangle(Rectangle* r1, Rectangle* r2) {"
				"	int a1;"
				"	a1 = Integer_Rectangle_Area(r1);"
				"	int a2;"
				"	a2 = Integer_Rectangle_Area(r2);"
				"	return a1 + a2;"
				"}"
		Object: name: "myRect"
			fullName: "myRect"
			parentScope: NULL
			type: Variable
			returnType: "Rectangle"
			paramTypes: NULL
			definedSymbols: NULL
			code: NULL
		Object: name: "mySquare"
			fullName: "mySquare"
			parentScope: NULL
			type: Variable
			returnType: "Square"
			paramTypes: NULL
			definedSymbols: NULL
			code: NULL
		Object: name: "total"
			fullName: "total"
			parentScope: NULL
			type: Variable
			returnType: "Integer"
			paramTypes: NULL
			definedSymbols: NULL
			code: NULL
	code:
		"#include \"rsl.h\""
		"#include \"out.h\""
		"int main(void) {"
		"	Rectangle * myRect = Rectangle_Rectangle_Rectangle_Integer_Integer(10, 5);"
		"	Square * mySquare = Square_Square_Square_Integer(4);"
		"	int total;"
		"	total = Integer_calcTotalArea_Rectangle_Rectangle(myRect, &mySquare->parent);"
		"	Stream_print_String( blah blah blah );"
		"	return 0;"
		"}"


Object:
	name: "..."
	fullName: "..."
	parentScope: "..."
	type: ... (Variable, Type, Constructor, Function, CodeBlock)
	returnType: "..." (Integer, Rectangle, None)
	paramTypes: [...]
	definedSymbols: [...]
	code: ["..."]
